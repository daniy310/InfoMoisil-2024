<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhVQBVAPcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJDAABACH+H0dlbmVyYXRlZCBieSBvbmxpbmVHSUZ0b29scy5j
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj+AAMIHEiwoMGDBgEgXMiw4UIAEB1KnJgQokKKGB1atJix
        40GOASJ6HBlSZEmSI02WvIiSIkiBL1tqVAmTpcyGMWvavPmRps6NPCs+3Eh0J8mcCIv69LiUIVCZSJ1G
        ZWpUalOJJqf2vDrzotaKXGcO/ErwqUuWL8OOJdtz7dqqWzuCTAsXLFW3OrGqTeo1a92ye+OuzIszsGC/
        ev8WVjhXLVuphB37fHyyMlmklC33VRzTbNfBlYfaNPtVpGmunely7luzMGC/igtGLK2ysWHZV1Nvjj0U
        8tufR3PD/h1cNGDiKYWjXc7bKt/Rzcv6bjtWrmfkuKM/vz71Nt+fs5thZjYOvrt28m/Fe39uned40FC9
        r5+eOGhovfbvL86f+TrK8f4ld16A1p23koHUFRhfcAi+RtV8DmZEIEYATihhc0TZJ9l7+IkG4WdgcXjW
        ThnmR11RJnpoYYoopiiWiwsFBAAh+QQFDAABACH+H0dlbmVyYXRlZCBieSBvbmxpbmVHSUZ0b29scy5j
        b20ALBIABgAxAEUAhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAj+AAMIHEiwoMGDBgEAQMiwoUOEChU+nEixYESJFTM6vIhRo0eLGDt+/HhRoMiRGiMOVIkypUiWLSnC
        NHkyZsOZNG1OxElzoU6GPHtyLKkzqNChNT0ahcjRZtKNSytGTThVqk+ZVbFefUhU6dasQkfOBNvV61Wy
        YFeufPkUZFuma8++jbt1Z0i2duceZAkza1qCHfFy1bv3rty6hRFr7bl2sGKsjRlDfWxXcgC9PClTlTw1
        s2bAdyPfZEv4cmjTn8emVcl3LunPIDmnDvw3NmqooOuWNp1z9OHcsKlq7ku7tuXElsu69B03LPPCz4nP
        Vr609e/JTY+7TR7cusS3hklcFleeu7dZt213494LVP1orz95ZzTefnn81e4nWw2+v/999fTVN19+Ag5I
        4GZm8feeeAc2l2BMtQ0F4W4SFtVddj+5huF/j20Yn3YVfrjdUQpOiJSI2DWI4ooGBQQAOw==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhVQBVAPAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJDAABACwAAAAAVQBVAAAC/4yP
        qcvtD6OctNqLs968+w+G4khKQIlSwJq2z8q6MgLD8x3btxsH+l76+U7AYG9ILIqOBqGy40Q+ObWodKqq
        VhtMrEPbXVi94jE3SX6Zy+j0OXx2R2qTH9xNN+Xu6TzE3iZ34Kc22MP3tEZzmISY6NjUuBfYBwloKLhI
        qcBIBPm4qRnp+VmkGIl5lTn6N6mKFXXqOoTXpaizJ0d4m0s7BXjEy3qaAoy2hkvqZbxY6FuKkieEzAIt
        Ix18RwxKehzqu8oq/pqwDZo6zvldKWkYal4pyhb+0szAt85+H7ZFjzqviVC4MTa0/PMHrhwYdwjTBWwD
        71c+dRPJRIwosQLGc1Z1KtbK0lChR2sSS200Be/kDoGtPHKzoPIayYMDZ9JcxXKOTRwYY87op8clrJxl
        Qop0tHMoNaNsrPi0KPApu2RMgwKt2lIqvaRYu3r9Cjas2LFky4otAAAh+QQJDAABACwSAAYAMQBFAAAC
        /4yPB5DtD2NYS9oLacUc692Fz0aJZkKWp6lO4Nq1LgPH71xzN55bsrJbfYa0xu9E/GSCoqGtCNM0oTWp
        jsk6RrBZLsobsl5k4K3WQS4v1a3ztZwuUj1uRBuk/sKhqvp6jJcyRzdoxCdXCJgIhEjjZ7ZoEOiYZxjJ
        4wKkY+nTKHmpqSfRl/J2eBn4Cap6OlqKqXjoSsnwqOdppvrpKhr6l0nYqpsLHIwLy4l0RwsZRXqMtvrL
        U8dkuzwcTeXUyZidPKM0RZkrbhv9fYudgyXuzd4+It0dNj9b3+NLl5/ezH+OrEoegJ3mEfR3pYeYhAIr
        6eti7+G4iAHrLVSk0F3Bfxoal/Bj5MfhE2siLf44qEwMSiFJPpoq6TJBAQAh+QQJDAABACwSAAYAMQBG
        AAAC/4yPCMntDw2YsVo46d03Zw5iS/CFpjKS2hmWUspyrgrH1nrMtljT++PRvXqsoBFINBlxyGRLGGHG
        PDJpEYr85bANl7X67Wq4HTIqFd5Qb+hVullub0/m+fCufONV9rwTtTWix1NRYjjoUMf3sudXOEah6JNQ
        Byn4RylldsioNrMJ2Qk3BAN6B9qGQ8a5SEgKKNI5uPaZ9oF4dlkaJpl4uBs75Tbs1OsrF5hl45U6qtU6
        yWCsBiuG8YMFFbTzpbPE3R25DX11PB4tnHTeKPyE6fmeGV8GMu1K/0weNQ/v+bzGht8+XOiuECzoRyA7
        d3QUSjtYrSFEhO4c2hNj7KK5eRsTB+rp+GiVQ3jaQJKsobFiqHwh17HkkRJbjQIAIfkEBQwAAQAsEgAG
        ADEARQAAAv+MjweQ7Q9jWEvaC2nFHOvdhc9GiWZClqepTuDatS4Dx+9cczeeW7KyW32GtMbvRPxkgqKh
        rQjTNKE1qY7JOkawWS7KG7JeZOCt1kEuL9Wt87WcLlI9bkQbpP7Coar6eoyXMkc3aMQnVwiYCIRI42e2
        aBDomGcYyeMCpGPp0yh5qakn0ZfydngZ+Amqejpaiql46ErJ8Kjnaab66Soa+pdJ2KqbCxyMC8uJdEcL
        GUV6jLb6y1PHZLs8HE3l1MmYnTyjNEWZK24b/X2LnYMl7s3ePiLdHTY/W9/jS5ef3sx/jqxKHoCd5hH0
        d6WHmIQCK+nrYu/huIgB6y1UpNBdwX8aGpfwY+TH4RNrIi3+OKhMDEohST6aKukyQQEAOw==
</value>
  </data>
</root>